# This is the definition file to make apptainer vep image. Should be the same as the dockerfile used to make
# monsieurbl/vep_pipeline:v1 (https://hub.docker.com/r/monsieurbl/vep_pipeline/tags)
# without loftee installation
BootStrap: docker
From: mambaorg/micromamba:latest


%arguments
	vep_version=105.0

# these are executed when the image is being built
# specify bash shell
%post -c /bin/bash

	# this is set at build time for use, but to make it available when image start, have to export to environment
	export VERSION={{ vep_version }}
	echo "export VERSION=${VERSION}" >> $APPTAINER_ENVIRONMENT



	# set up working directory for VEP installation and directory to binds
	
	wdir="/tmp/vep_cache"
	mkdir $wdir
	cd $wdir

	micromamba install --prefix $MAMBA_ROOT_PREFIX -y -c conda-forge -c bioconda -c defaults samtools


	# install git
	apt-get update && \
	apt-get install git -y && \
  apt-get clean

	# install vep via micromamba into base
	micromamba install --prefix $MAMBA_ROOT_PREFIX -y -c conda-forge -c bioconda -c defaults ensembl-vep=$VERSION

	# install perl modules into base
	micromamba install -y --prefix $MAMBA_ROOT_PREFIX -c bioconda -c conda-forge perl-bio-bigfile perl-dbd-sqlite perl-list-moreutils samtools


	# export environment variables
	export VEP_SHARE=$MAMBA_ROOT_PREFIX/share/ensembl-vep-$VERSION-*
	echo "export VEP_SHARE=${MAMBA_ROOT_PREFIX}/share/ensembl-vep-${VERSION}-*" >> $APPTAINER_ENVIRONMENT


	export PERL5LIB=/:$MAMBA_ROOT_PREFIX/share/ensembl-vep/
	echo "export PERL5LIB=/:${MAMBA_ROOT_PREFIX}/share/ensembl-vep/" >> $APPTAINER_ENVIRONMENT



	# run vep_install in base
	# # the links is so that vep libraries are linked properly according to instruction.
	# # otherwise have to add the ensembl-vep-$VERSION* to PERL5LIB.
	micromamba run --prefix $MAMBA_ROOT_PREFIX /bin/bash -c "vep_install --AUTO a --NO_UPDATE --NO_HTSLIB --DESTDIR ${MAMBA_ROOT_PREFIX}/share/ensembl-vep-${VERSION}* && ln -fs ${MAMBA_ROOT_PREFIX}/share/ensembl-vep-${VERSION}* ${MAMBA_ROOT_PREFIX}/share/ensembl-vep"

# this defines what happens when doing
# apptainer run -C apptainer_pkg "<options>"
%runscript
	echo "this is apptainer image for vep ${VERSION}"
	echo "VEP is installed in ${VEP_SHARE}"


	vep_cmd="micromamba run --prefix $MAMBA_ROOT_PREFIX /bin/bash -c \"$@\""
	echo $vep_cmd
	# this would be similar to the CMD or ENTRYPOINT of dockerfile
	micromamba run --prefix $MAMBA_ROOT_PREFIX /bin/bash -c "$@"



%labels
	Author: Kevin Liang
	Version: 1.0
	Description: "Apptainer definition file for docker image from monsieurbl/vep_pipeline"

%help
	This is an apptainer image based on monsieurbl/vep_pipeline:v1 available on dockerhub.

	It contains only vep and does not have any plugins or cache.
	Must install cache and run with --dir_cache
	
	To use this image to run commands using the apptainer environment do:
		apptainer run -C vep_apptainer "$@"
	e.g., to see VEP installation directory
		apptainer run -C vep_apptainer "echo \$VEP_SHARE"
		apptainer run -C vep_apptainer 'echo $VEP_SHARE'
	
	Bind to appropriate host FS using -B command to read/write files, such as installation of cache


	e.g., install dbNFSP into ~/dir
		apptainer run -C -B ~/dir:/vep_plugins vep_apptainer "vep_install -a p --PLUGINS dbNFSP --CACHE_VERSION 105 --PLUGINSDIR /tmp"


